#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã CryptoCoinChange
# –í–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏ –∞–¥–º–∏–Ω—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –≤ –æ–¥–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã CryptoCoinChange..."
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–ø—É—â–µ–Ω –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É
check_port() {
    local port=$1
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
        return 0
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
wait_for_service() {
    local port=$1
    local service_name=$2
    local max_attempts=30
    local attempt=0

    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ $service_name –Ω–∞ –ø–æ—Ä—Ç—É $port..."
    
    while [ $attempt -lt $max_attempts ]; do
        if check_port $port; then
            echo "‚úÖ $service_name –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $port"
            return 0
        fi
        sleep 2
        attempt=$((attempt + 1))
    done
    
    echo "‚ùå $service_name –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –Ω–∞ –ø–æ—Ä—Ç—É $port –∑–∞ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")"

echo "üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo ""

# 1. –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL —á–µ—Ä–µ–∑ Docker
echo "üêò –ó–∞–ø—É—Å–∫ PostgreSQL..."
if check_port 5433; then
    echo "‚úÖ PostgreSQL —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5433"
else
    echo "üì¶ –ó–∞–ø—É—Å–∫ PostgreSQL —á–µ—Ä–µ–∑ Docker Compose..."
    docker-compose up -d postgres
    
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ PostgreSQL"
        exit 1
    fi
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ PostgreSQL
    wait_for_service 5433 "PostgreSQL"
    if [ $? -ne 0 ]; then
        echo "‚ùå PostgreSQL –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        exit 1
    fi
fi

echo ""

# 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
if [ ! -d "node_modules" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        exit 1
    fi
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç
echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞..."
npx prisma generate
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Prisma –∫–ª–∏–µ–Ω—Ç–∞"
    exit 1
fi

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
npx prisma db push
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π"
    exit 1
fi

# –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏
echo "üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏..."
npm run db:seed
if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏ (–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º)"
fi

echo ""

# 3. –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
echo "üöÄ –ó–∞–ø—É—Å–∫ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã (–ø–æ—Ä—Ç 3000)..."
if check_port 3000; then
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ –ø–æ—Ä—Ç—É 3000"
else
    echo "üîÑ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –≤ —Ñ–æ–Ω–µ..."
    npm run dev > logs/app.log 2>&1 &
    APP_PID=$!
    echo "üìù PID —Å–∏—Å—Ç–µ–º—ã: $APP_PID"
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    wait_for_service 3000 "–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"
    if [ $? -ne 0 ]; then
        echo "‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å"
        kill $APP_PID 2>/dev/null
        exit 1
    fi
fi

echo ""

# 4. –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
echo "üéâ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "   üåê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:3000"
echo "   üîß –ê–¥–º–∏–Ω—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:        http://localhost:3000/admin"
echo "   üêò PostgreSQL:                localhost:5433"
echo ""
echo "üë• –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏:"
echo "   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin123"
echo "   –ö–∞—Å—Å–∏—Ä 1:      cashier1 / cashier123"
echo "   –ö–∞—Å—Å–∏—Ä 2:      cashier2 / cashier123"
echo ""
echo "üìù –õ–æ–≥–∏:"
echo "   –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: logs/app.log"
echo ""
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    if [ ! -z "$APP_PID" ]; then
        echo "üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã (PID: $APP_PID)..."
        kill $APP_PID 2>/dev/null
    fi
    
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    exit 0
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
wait
